name: üõ† Lint, Format & Tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  lint-format:
    name: Pre-commit (Ruff, Black, etc.)
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Check out the repo
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Python
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      # 3Ô∏è‚É£ Install pre-commit & run hooks
      - run: |
          python -m pip install --upgrade pip pre-commit
          pre-commit run --all-files --show-diff-on-failure

  tests:
    name: Pytest & Coverage
    runs-on: ubuntu-latest
    needs: lint-format          # only run tests if lint passes

    steps:
      # 1Ô∏è‚É£ Code
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Python
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3Ô∏è‚É£ Poetry install (cached)
      - name: Install Poetry
        run: python -m pip install poetry

      - name: Cache Poetry virtualenv
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: >-
            poetry-v2-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --with dev

      # 4Ô∏è‚É£ Run tests with coverage
      - name: Run pytest
        run: |
          poetry run pytest --cov=jewel_db --cov-report=xml --cov-report=term-missing

      # 5Ô∏è‚É£ Upload coverage artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-xml
          path: coverage.xml